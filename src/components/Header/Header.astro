---
import SkipToContent from './SkipToContent.astro';
import SidebarToggle from './SidebarToggle';
import LanguageSelect from './LanguageSelect';
import Search from './Search.astro';
import ThemeToggleButton from './ThemeToggleButton';
import { getLanguageFromURL } from '../../util';
import { getDocSearchStrings, useTranslations } from '../../i18n/util';
import ORLogo from './ORLogo.astro';

import VersionSelector from '../versionSelector.astro'

const { currentPage } = Astro.props;
const lang = currentPage && getLanguageFromURL(currentPage);
const docsearchStrings = getDocSearchStrings(Astro);
const t = useTranslations(Astro);
---

<header>
	<SkipToContent />
	<nav class="nav-wrapper flex justify-between lg:justify-start xl:justify-between w-full max-w-screen-2xl mx-auto " aria-label={t('navbar.a11yTitle')}>
		<div class="flex logo justify-start xl:w-2/12">
			<ul class="flex w-max items-center justify-start mr-2">
				<li class="mr-0">
					<a class="logo-clickarea astro pl-0 pb-0" href={`/${lang || 'en'}/`}>
						<ORLogo />
						<span class="sr-only">OpenReplay</span>
					</a>
				</li>
				<li class="mr-0"> <VersionSelector /></li>
			</ul>
		</div>

		<div class="flex xl:w-7/12 justify-start">
		<Search {lang} labels={docsearchStrings} />
		</div>
		
		<div class="flex xl:w-2/12 items-center gap-1 ">
				<div class="hidden xl:flex justify-end gap-1">
					<div dir="ltr" lang="en">
						{lang && <LanguageSelect lang={lang} client:idle />}
				</div>

				<div class="nav-theme-toggle">
					<ThemeToggleButton
					client:visible
					labels={{ useLight: t('themeToggle.useLight'), useDark: t('themeToggle.useDark') }}
					isInsideHeader={true}
					/>
				</div>
			</div>
			<SidebarToggle client:idle />
		</div>

	</nav>
</header>

<style>
	header {
		position: fixed;
		left: 0;
		top: 0;
		right: 0;
		z-index: 11;
		padding: .5rem 1rem;
		background-color: var(--content-bg);
		display: flex;
		align-items: center;
		justify-content: left;
		overflow: hidden;
		border-bottom: thin solid rgba(123,123,123,.2);
		height: var(--theme-navbar-height);
	}

	ul,
	li {
		all: inherit;
		flex-grow: 0;
	}

	.nav-wrapper {
		align-items: center;
		gap: 0;
	}

	/* If the device is likely to show a scrollbar gutter, reserve space for it */
	@media (hover: hover) {

	}

	.logo {
		line-height: 1;
		text-decoration: none;
		gap: 0.5em;
	}

	:global([dir='rtl']) .logo {
		justify-content: flex-end;
	}

	.logo a {
		/* padding: 0.5em 0.25em; */
		margin: -0.5em -0.25em;
		height: fit-content;
	}

	.logo svg {
		height: 40px;
		width: auto;
		display: block;
		color: var(--theme-accent);
	}

	.logo .hover {
		opacity: 0;
	}
	.logo a {
		transition: transform 180ms ease-out;
	}

	.logo a:hover,
	.logo a:focus {
		opacity: 1;
	}

	.logo a:focus:not(:focus-visible) {
		outline: none;
	}

	.logo h1 {
		font: inherit;
		color: inherit;
		margin: 0;
	}

	.astro {
		overflow: hidden;
		width: 41px;
	}

	.docs {
		display: none;
	}

	@media (min-width: 20em) {
		.docs {
			display: inherit;
			max-width: 80px;
		}
	}

	@media (min-width: 23.5em) {
		.docs {
			max-width: none;
		}
		.nav-wrapper {
			gap: 0;
		}
	}

	@media (max-width:50rem){
		.logo-clickarea{
			max-width: 22px;
			display: block;
			overflow: hidden;
		}
	}

	@media (min-width: 50em) {
		header {
			padding: .5rem 1rem;
		}
		.astro {
			width: auto;
		}
	}

	@media (forced-colors: active) {
		.text {
			fill: LinkText;
		}
		.docs-path {
			fill: ActiveText;
		}
	}
</style>
